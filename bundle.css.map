{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/сomponents/AddButton.svelte",
    "../src/сomponents/Timer.svelte",
    "../src/сomponents/pop-up/Window.svelte",
    "../src/сomponents/pop-up/Input.svelte",
    "../src/сomponents/pop-up/InputTime.svelte",
    "../src/сomponents/pop-up/Lever.svelte",
    "../src/сomponents/pop-up/Button.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n  import AddButton from \"./сomponents/AddButton.svelte\";\n  import Timer from \"./сomponents/Timer.svelte\";\n  import Window from \"./сomponents/pop-up/Window.svelte\";\n\n  const rawTimers = localStorage.timers;\n  let timers = rawTimers\n    ? JSON.parse(rawTimers)\n    : [\n        {\n          name: \"Таймер\",\n          active: true,\n          time: 15,\n          type: \"countdown\"\n        },\n        {\n          name: \"Секундомер\",\n          active: true,\n          time: 60,\n          type: \"timer\"\n        }\n      ];\n\n  let newTimer = {\n    name: \"Название\",\n    active: true,\n    time: 0,\n    type: \"timer\"\n  }\n  let openWindow = false;\n\n  // Добавить таймер\n  function addTimer() {\n    openWindow = false;\n    timers.push(clone(newTimer));\n  }\n\n  onMount(() => {\n    const interval = setInterval(() => {\n      // Обновление таймеров каждую секунду\n      for (let i = 0; i < timers.length; i++) {\n        if (timers[i].active) {\n          if (timers[i].type == \"countdown\") {\n            if (timers[i].time == 0) {\n              timers[i].active = false;\n              return;\n            }\n            timers[i].time--;\n          } else {\n            timers[i].time++;\n          }\n        }\n      }\n      localStorage.timers = JSON.stringify(timers);\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  function clone(src) {\n    return Object.assign({}, src);\n  }\n</script>\n\n<style>\n  .timers {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 24px;\n    margin: 0 auto;\n    max-width: 860px;\n  }\n  .background{\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n  .clear{\n    display: flex;\n    text-align: center;\n    margin: 100px auto;\n  }\n  .clear span{\n    cursor: pointer;\n    margin: auto;\n  }\n  .header{\n    padding: 200px 32px 80px;\n    font-family: Roboto;\n    font-size: 50px;\n    line-height: 59px;\n    text-align: center;\n  }\n</style>\n\n\n<div class=\"header\">\n  ПОСТАВЬ СВОЙ ТАЙМЕР\n</div>\n\n<div class=\"timers\">\n  {#each timers as timer}\n    <Timer {timer}/>\n  {/each}\n</div>\n\n{#if timers.length>0}\n  <div class=\"clear\">\n    <span on:click={() => timers=[]}>Очистить все таймеры</span> \n  </div>\n{/if}\n\n{#if openWindow}\n  <div class=\"background\" on:click={() => (openWindow = false)}></div>\n  <Window bind:timer={newTimer} on:start={addTimer} />\n{/if}\n\n<AddButton on:click={() => (openWindow = true)} />\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n  const dispatch = createEventDispatcher();\n  const click = () => dispatch('click');\n</script>\n\n<style>\n  .button{\n    position: absolute;\n    width: 130px;\n    height: 130px;\n    left: -20px;\n    top: -30px;\n    border-radius:50%;\n\n    background: #00FFA3;\n\n    cursor: pointer;\n  }\n  .button::before{\n    content: '+';\n    position: absolute;\n    left: 55px;\n    top: 45px;\n    text-align:center;\n    font-family: Roboto;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 50px;\n    line-height: 50px;\n\n    color: #000000;\n  \n  }\n  .button:active{\n    background: rgb(0, 221, 140);\n  }\n</style>\n\n<div class=\"button\" on:click={click}>\n  +\n</div>",
    "<script>\n  export let timer;\n\n  // При обновлении timer.time, автоматически обновить time\n  $: time = timeToText(timer.time);\n\n  function timeToText(t) {\n    let s = t;\n\n    let h = parseInt(s / 3600);\n    s -= h * 3600;\n    let m = parseInt(s / 60);\n    s -= m * 60;\n\n    return (\n      (\"0\" + h).slice(-2) +\n      \":\" +\n      (\"0\" + m).slice(-2) +\n      \":\" +\n      (\"0\" + s).slice(-2)\n    );\n  }\n</script>\n\n<style>\n  .body {\n    display: flex;\n    align-items: baseline;\n    cursor: pointer;\n  }\n  .time {\n    font-size: 50px;\n    color: #000000;\n    margin-right: 26px;\n  }\n  .name {\n    font-size: 18px;\n    word-wrap: break-word;\n  }\n  .active .time {\n    color: #00ffa3;\n  }\n  .stop .time {\n    color: #ff0000;\n  }\n</style>\n\n<div\n  class=\"body\"\n  class:active={timer.active && timer.time > 0}\n  class:stop={!timer.active && timer.time > 0}\n  on:click={() => (timer.active = !timer.active)}>\n  <div class=\"time\">{time}</div>\n  <div class=\"name\">{timer.name}</div>\n</div>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  import Input from \"./Input.svelte\";\n  import InputTime from \"./InputTime.svelte\";\n  import Lever from \"./Lever.svelte\";\n  import Button from \"./Button.svelte\";\n\n  export let timer;\n  let rawTime;\n\n  function dragElement(elmnt) {\n    var pos1 = 0,\n      pos2 = 0,\n      pos3 = 0,\n      pos4 = 0;\n    elmnt.onmousedown = dragMouseDown;\n    // center\n    elmnt.style.top = window.innerHeight / 2 - 325 + \"px\";\n    elmnt.style.left = window.innerWidth / 2 - 260 + \"px\";\n\n    function dragMouseDown(e) {\n      e = e || window.event;\n      // e.preventDefault();\n      // get the mouse cursor position at startup:\n      pos3 = e.clientX;\n      pos4 = e.clientY;\n      document.onmouseup = closeDragElement;\n      // call a function whenever the cursor moves:\n      document.onmousemove = elementDrag;\n    }\n\n    function elementDrag(e) {\n      e = e || window.event;\n      // e.preventDefault();\n      // calculate the new cursor position:\n      pos1 = pos3 - e.clientX;\n      pos2 = pos4 - e.clientY;\n      pos3 = e.clientX;\n      pos4 = e.clientY;\n      // set the element's new position:\n      elmnt.style.top = elmnt.offsetTop - pos2 + \"px\";\n      elmnt.style.left = elmnt.offsetLeft - pos1 + \"px\";\n    }\n\n    function closeDragElement() {\n      // stop moving when mouse button is released:\n      document.onmouseup = null;\n      document.onmousemove = null;\n    }\n  }\n\n  function toSecond(hms) {\n    var a = hms.split(\":\");\n    console.log(a);\n    if (a.length == 3) {\n      a[0] = parseInt(a[0]);\n      a[1] = parseInt(a[1]);\n      a[2] = parseInt(a[2].slice(0, 2));\n      return +a[0] * 60 * 60 + +a[1] * 60 + +a[2];\n    }\n    return 0;\n  }\n\n  const dispatch = createEventDispatcher();\n  const click = () => {\n    timer.time = timer.type == \"timer\" ? 0 : toSecond(rawTime);\n    dispatch(\"start\");\n  };\n  onMount(() => {\n    dragElement(document.getElementById(\"window\"));\n  });\n</script>\n\n<style>\n  .window {\n    position: absolute;\n    z-index: 9;\n\n    padding: 60px 35px 40px;\n    box-sizing: border-box;\n    max-width: 650px;\n    background: #fefefe;\n    box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.05);\n    border-radius: 10px;\n  }\n  .text {\n    font-size: 50px;\n\n    color: #000000;\n  }\n  .center {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n</style>\n\n<div class=\"window\" id=\"window\">\n  <div style=\"margin-bottom:50px;\" onclick=\"event.stopPropagation()\">\n    <Input bind:title={timer.name} />\n  </div>\n  <div class=\"text\" style=\"margin-bottom:55px;\">Тип таймера</div>\n\n  <div style=\"margin-bottom:80px;\">\n    <Lever first=\"Timer\" second=\"Countdown\" bind:type={timer.type} />\n  </div>\n\n  {#if timer.type == 'countdown'}\n    <div class=\"center\" style=\"margin-bottom:80px;\">\n      <InputTime bind:rawTime />\n    </div>\n  {/if}\n\n  <div class=\"center\">\n    <Button title=\"СТАРТ\" on:click={click} />\n  </div>\n</div>\n",
    "<script>\n  export let title;\n</script>\n\n<style>\n  .input {\n    border: none;\n    background: none;\n    padding: 0;\n    margin: 0;\n    font-size: 50px;\n    color: #000000;\n    width: 100%;\n  }\n</style>\n\n<input class=\"input\" type=\"text\" bind:value={title} />\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import IMask from \"imask\";\n  export let rawTime;\n\n  onMount(() => {\n    let mask = IMask(document.getElementById(\"time-mask\"), {\n      mask: \"HH:MM:SS\",\n      blocks: {\n        HH: {\n          mask: IMask.MaskedRange,\n          from: 0,\n          to: 99\n        },\n        MM: {\n          mask: IMask.MaskedRange,\n          from: 0,\n          to: 59\n        },\n        SS: {\n          mask: IMask.MaskedRange,\n          from: 0,\n          to: 59\n        }\n      }\n    });\n    mask.on(\"accept\", () => {\n      rawTime = mask.value;\n    });\n  });\n</script>\n\n<style>\n  #time-mask {\n    border: none;\n    background: none;\n    padding: 0;\n    margin: 0;\n    font-size: 50px;\n    width: 200px;\n  }\n</style>\n\n<div class=\"input\">\n  <input id=\"time-mask\" type=\"text\" value=\"00:00:00\" />\n</div>\n",
    "<script>\n  export let first;\n  export let second;\n  export let type;\n\n  function changeType() {\n    type = type == \"countdown\" ? \"timer\" : \"countdown\";\n  }\n</script>\n\n<style>\n  .lever {\n    display: flex;\n  }\n  .back {\n    position: relative;\n    width: 156px;\n    height: 50px;\n    background: #f7f7f7;\n    border: 1px solid #f5f5f5;\n    box-sizing: border-box;\n    border-radius: 100px;\n    margin: 0 20px;\n\n    cursor: pointer;\n  }\n  .text {\n    font-size: 50px;\n\n    color: #000000;\n  }\n  .round {\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n    background: #00ffa3;\n    transition: all 0.2s linear;\n    left: 0;\n  }\n  .round.right {\n    left: 106px;\n    background: #ff0000;\n  }\n</style>\n\n<div class=\"lever\">\n  <div class=\"text\">{first}</div>\n  <div class=\"back\" on:click={changeType}>\n    <div class=\"round\" class:right={type == 'countdown'} />\n  </div>\n  <div class=\"text\">{second}</div>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n  const click = () => dispatch(\"click\");\n  export let title;\n</script>\n\n<style>\n  .button {\n    background: #0075ff;\n    border: 1px solid #f5f5f5;\n    border-radius: 5px;\n    padding: 11px 30px;\n\n    font-family: Roboto;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 24px;\n    color: #ffffff;\n\n    user-select: none;\n    cursor: pointer;\n  }\n  .button:active {\n    background: rgb(0, 106, 226);\n  }\n</style>\n\n<div class=\"button\" on:click={click}>{title}</div>\n"
  ],
  "names": [],
  "mappings": "AAoEE,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAC9B,QAAQ,CAAE,IAAI,CACd,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,yBAAW,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,AACV,CAAC,AACD,oBAAM,CAAC,AACL,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,KAAK,CAAC,IAAI,AACpB,CAAC,AACD,oBAAM,CAAC,kBAAI,CAAC,AACV,MAAM,CAAE,OAAO,CACf,MAAM,CAAE,IAAI,AACd,CAAC,AACD,qBAAO,CAAC,AACN,OAAO,CAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CACxB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,AACpB,CAAC;AC1FD,qBAAO,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,IAAI,CAAE,KAAK,CACX,GAAG,CAAE,KAAK,CACV,cAAc,GAAG,CAEjB,UAAU,CAAE,OAAO,CAEnB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,qBAAO,QAAQ,CAAC,AACd,OAAO,CAAE,GAAG,CACZ,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,IAAI,CACV,GAAG,CAAE,IAAI,CACT,WAAW,MAAM,CACjB,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CAEjB,KAAK,CAAE,OAAO,AAEhB,CAAC,AACD,qBAAO,OAAO,CAAC,AACb,UAAU,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC9B,CAAC;ACXD,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,QAAQ,CACrB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,CACd,YAAY,CAAE,IAAI,AACpB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,SAAS,CAAE,UAAU,AACvB,CAAC,AACD,sBAAO,CAAC,KAAK,eAAC,CAAC,AACb,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,oBAAK,CAAC,KAAK,eAAC,CAAC,AACX,KAAK,CAAE,OAAO,AAChB,CAAC;AC+BD,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CAAC,CAEV,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CACvB,UAAU,CAAE,UAAU,CACtB,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAC5C,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,CAEf,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,AACzB,CAAC;AC1FD,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,CACd,KAAK,CAAE,IAAI,AACb,CAAC;ACoBD,UAAU,eAAC,CAAC,AACV,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,KAAK,AACd,CAAC;AC7BD,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,IAAI,AACf,CAAC,AACD,KAAK,cAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,UAAU,CACtB,aAAa,CAAE,KAAK,CACpB,MAAM,CAAE,CAAC,CAAC,IAAI,CAEd,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,CAEf,KAAK,CAAE,OAAO,AAChB,CAAC,AACD,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,OAAO,CACnB,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAC3B,IAAI,CAAE,CAAC,AACT,CAAC,AACD,MAAM,MAAM,cAAC,CAAC,AACZ,IAAI,CAAE,KAAK,CACX,UAAU,CAAE,OAAO,AACrB,CAAC;ACnCD,OAAO,cAAC,CAAC,AACP,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CAAC,IAAI,CAElB,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,CAEd,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,qBAAO,OAAO,AAAC,CAAC,AACd,UAAU,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AAC9B,CAAC"
}